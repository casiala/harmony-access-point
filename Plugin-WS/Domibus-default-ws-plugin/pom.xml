<?xml version="1.0" encoding="UTF-8"?>

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.niis</groupId>
        <artifactId>plugin-ws</artifactId>
        <version>2.4.0</version>
    </parent>
    <artifactId>harmony-default-ws-plugin</artifactId>
    <packaging>jar</packaging>
    <name>Harmony MSH Default WS Plugin</name>

    <dependencies>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.messaging.saaj</groupId>
            <artifactId>saaj-impl</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-client</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <scope>provided</scope>
        </dependency>
        <!--        CXF -->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-features-logging</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-bindings-soap</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-local</artifactId>
            <scope>provided</scope>
        </dependency>
        <!--        CXF END-->
        <!--        Domibus Start     -->
        <dependency>
            <groupId>org.niis</groupId>
            <artifactId>harmony-plugin-api</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.niis</groupId>
            <artifactId>harmony-ext-model</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.niis</groupId>
            <artifactId>harmony-ws-stubs</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.niis</groupId>
            <artifactId>harmony-default-ws-plugin-stubs</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.niis</groupId>
            <artifactId>harmony-default-ws-plugin-backend-ws-stubs</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.niis</groupId>
            <artifactId>harmony-logging</artifactId>
        </dependency>
        <!--       Domibus End      -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.activation</groupId>
            <artifactId>jakarta.activation-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!--        Spring Start        -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jms</artifactId>
            <scope>provided</scope>
        </dependency>
        <!--        Spring End        -->

        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <scope>provided</scope>
        </dependency>
        <!--        START TEST        -->
        <dependency>
            <groupId>org.niis</groupId>
            <artifactId>harmony-msh-test</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.niis</groupId>
            <artifactId>harmony-msh-test-common</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.niis</groupId>
            <artifactId>harmony-MSH-tomcat</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <!--        END TEST        -->
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>
                                    <artifact>*.*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-banned-dependencies</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <bannedDependencies>
                                    <searchTransitive>false</searchTransitive>
                                    <excludes>
                                        <exclude>org.niis:*</exclude>
                                    </excludes>
                                    <includes>
                                        <include>org.niis:harmony-plugin-api</include>
                                        <include>org.niis:harmony-ext-model</include>
                                        <include>org.niis:harmony-ws-stubs</include>
                                        <include>org.niis:harmony-default-ws-plugin-stubs</include>
                                        <include>org.niis:harmony-default-ws-plugin-backend-ws-stubs</include>
                                        <include>org.niis:harmony-logging</include>
                                        <include>org.niis:harmony-msh-test-common</include>
                                        <include>org.niis:harmony-msh-test</include>
                                        <include>org.niis:harmony-MSH-tomcat:${project.version}:jar:test</include>
                                    </includes>
                                </bannedDependencies>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>tomcat</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>org.niis</groupId>
                                <artifactId>harmony-msh-test-common</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.niis</groupId>
                                <artifactId>harmony-logging</artifactId>
                                <version>${project.version}</version>
                            </dependency>

                            <!-- needed to get the server dependencies from the classes directory -->
                            <dependency>
                                <groupId>org.niis</groupId>
                                <artifactId>harmony-MSH-tomcat-distribution</artifactId>
                                <version>${project.version}</version>
                                <classifier>classes</classifier>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>enforce-no-duplicate-dependencies-tomcat</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <duplicateDependenciesRule>
                                            <equivalentDuplicateDependencies>
                                                <item>bcpkix-jdk15on,bcpkix-jdk18on,bcpkix-jdk15to18</item>
                                                <item>bcutil-jdk15on,bcutil-jdk18on,bcutil-jdk15to18</item>
                                                <item>bcprov-jdk15on,bcprov-jdk18on,bcprov-jdk15to18</item>
                                            </equivalentDuplicateDependencies>

                                            <checkAgainstServerDependencies>
                                                <item>tomcat</item>
                                            </checkAgainstServerDependencies>
                                        </duplicateDependenciesRule>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>weblogic</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>org.niis</groupId>
                                <artifactId>harmony-msh-test-common</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.niis</groupId>
                                <artifactId>harmony-logging</artifactId>
                                <version>${project.version}</version>
                            </dependency>

                            <!-- needed to get the server dependencies from the classes directory -->
                            <dependency>
                                <groupId>org.niis</groupId>
                                <artifactId>harmony-MSH-weblogic</artifactId>
                                <version>${project.version}</version>
                                <classifier>classes</classifier>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>enforce-no-duplicate-dependencies-weblogic</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <duplicateDependenciesRule>
                                            <equivalentDuplicateDependencies>
                                                <item>bcpkix-jdk15on,bcpkix-jdk18on,bcpkix-jdk15to18</item>
                                                <item>bcutil-jdk15on,bcutil-jdk18on,bcutil-jdk15to18</item>
                                                <item>bcprov-jdk15on,bcprov-jdk18on,bcprov-jdk15to18</item>
                                            </equivalentDuplicateDependencies>

                                            <checkAgainstServerDependencies>
                                                <item>weblogic</item>
                                            </checkAgainstServerDependencies>
                                        </duplicateDependenciesRule>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>wildfly</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>org.niis</groupId>
                                <artifactId>harmony-msh-test-common</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.niis</groupId>
                                <artifactId>harmony-logging</artifactId>
                                <version>${project.version}</version>
                            </dependency>

                            <!-- needed to get the server dependencies from the classes directory -->
                            <dependency>
                                <groupId>org.niis</groupId>
                                <artifactId>harmony-MSH-wildfly</artifactId>
                                <version>${project.version}</version>
                                <classifier>classes</classifier>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>enforce-no-duplicate-dependencies-wildfly</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <duplicateDependenciesRule>
                                            <equivalentDuplicateDependencies>
                                                <item>bcpkix-jdk15on,bcpkix-jdk18on,bcpkix-jdk15to18</item>
                                                <item>bcutil-jdk15on,bcutil-jdk18on,bcutil-jdk15to18</item>
                                                <item>bcprov-jdk15on,bcprov-jdk18on,bcprov-jdk15to18</item>
                                            </equivalentDuplicateDependencies>

                                            <checkAgainstServerDependencies>
                                                <item>wildfly</item>
                                            </checkAgainstServerDependencies>
                                        </duplicateDependenciesRule>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
